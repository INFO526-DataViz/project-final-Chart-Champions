---
title: "Constellation Maps"
subtitle: "Proposal"
format: html
editor: visual
---

```{r, echo=FALSE, message=FALSE}

if(!require(pacman))
  install.packages("pacman")

pacman::p_load(formattable, dplyr)
```

## High-level goal

Develop a Shiny app that generates constellation maps that utilizes interactive elements, incorporating computational and visualization techniques.

## Goal & Motivation

The primary objective of this project is to develop a Shiny app that not only generates interactive constellation maps but also prioritizes accessibility and personalization of these maps. By offering users the ability to input specific geographic locations, the app will provide personalized, contextually relevant constellation maps for each user. Individuals will be able to explore the night sky from different geographical locations by inputting latitude and longitudinal points to create visually provoking constellation maps. We hope to make stargazing more engaging and educational by personalizing the experience through various elements: color usage, map location, time zone, latitude/longitude location. Additionally, the app will be designed with a user-friendly interface to ensure accessibility with an aim to make it inclusive for people of all backgrounds and levels of astronomical knowledge. This will be achieved by using colorblind accessible palettes (avoiding bright and low-contrast colors) and providing annotations to provide readability and context for a wide range of users, including astronomy beginners.

## Dataset

The datasets are available in GeoJSON (`*.geojson`) and GeoPackage (`*.gpkg`) formats, representing celestial objects' positions as of the J2000 epoch. They are roughly categorized into five sections: `Asterisms`, `Constellations`, `DSOs` (Deep-Sky Objects), `Stars`, and the `Milky Way`. Each of these astronomical object categories is further subdivided into several subfiles.

We will be using three of the available data: the milkyway, the constellation lines, and the stars.

```{r, echo = FALSE}

#Load_Dataset
load_celestial <- function(filename,
                           url = "https://cdn.jsdelivr.net/gh/dieghernan/celestial_data@main/data/",
                           cachedir = tempdir()) {
  if (!dir.exists(cachedir)) {
    stop(
      "Please create ",
      path.expand(cachedir),
      " directory",
      "first"
    )
  }
  url <- file.path(url, filename)
  local_path <- file.path(cachedir, filename)
  if (!file.exists(local_path)) {
    download.file(url, local_path, mode = "wb", quiet = TRUE)
  }
  celestial <- sf::st_read(local_path, quiet = TRUE)
  return(celestial)
}
#Load_coordinate_labeller
pretty_lonlat <- function(x, type, accuracy = 2) {
  positive <- x >= 0
  # Decompose
  x <- abs(x)
  D <- as.integer(x)
  m <- (x - D) * 60
  M <- as.integer(m)
  S <- round((m - M) * 60, accuracy)
  # Get label
  if (type == "lon") {
    lab <- ifelse(positive > 0, "E", "W")
  } else {
    lab <- ifelse(positive > 0, "N", "S")
  }
  # Compose
  label <- paste0(D, "\u00b0 ", M, "' ", S, '\" ', lab)
  return(label)
}

mw <- load_celestial("mw.min.geojson")

const <- load_celestial("constellations.lines.min.geojson") 

stars <- load_celestial("stars.8.min.geojson")
```

### Milky Way

> `id`: Milky Way outlines in 5 brightness steps (ol1-ol5).
>
> `geometry`: geometry lines for milky way

```{r}

mw  |> formattable()
```

### Stars

> `id`: Short designator
>
> `mag`: Apparent magnitude, 999 if n.a.
>
> `bv`: b-v color index.
>
> `br`: Relative brightness to magnitude 0, computed as \$100\^{-1 \* mag / 5}\$
>
> `name`: Proper name
>
> `geometry`: around 40k stars point objects

```{r, echo = FALSE}

stars |> filter(!is.na(name)) |> head(10) |> formattable()

```

### Constellation lines

> `geometry`: 89 constellation line objects
>
> `id`: 3-letter designator
>
> `rank`: 1-3 for differential name display by size/brightness
>
> `name`: full IAU name

```{r, echo=FALSE}

const |> head(10) |> formattable()
```

These datasets originally feature interactive and adaptable constellation maps, initially curated by Olaf Frohn. However, some issues related to date lines and certain packages were identified in these datasets, and they were subsequently resolved by Dieghernan. You can explore the repository [here.](https://github.com/dieghernan/celestial_data/tree/main)

### Why did we choose this dataset?

As we explored various topics for a captivating visualization project using a Shiny app, we stumbled upon a fascinating reference that showcased creating city maps, which you can find [here](https://prettymapp.streamlit.app/). Inspired by this, our interest evolved towards the idea of crafting a celestial map that would represent the skies above our location.\
These datasets offer celestial visualizations based on longitude, latitude, and time parameters, granting us the ability to fashion dynamic and interactive sky maps.

## Weekly "plan of attack"

+-----------------------------------------------+--------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Week                                          | Assigned Team members                | Weekly Tasks                                                                                                                                                                                                                                                               |
+===============================================+======================================+============================================================================================================================================================================================================================================================================+
| Week 1-2: Understanding the Basics            | Megan Hokama, Tejashwini Kasa        | -   Understand the basics of spatial manipulation with libraries like `sf` and `s2`.                                                                                                                                                                                       |
|                                               |                                      |                                                                                                                                                                                                                                                                            |
|                                               |                                      | -   Get familiarized with visualization using `ggfx`, and `ggshadow`.                                                                                                                                                                                                      |
|                                               |                                      |                                                                                                                                                                                                                                                                            |
|                                               |                                      | -   Test out apps with Shiny and its usage for rendering real-time maps.                                                                                                                                                                                                   |
+-----------------------------------------------+--------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Week 3: Creating the basis for celestial maps | Kiwoon Hong, Visalakshi Iyer         | -   Create base functions for themes, loading datasets, parsing, and cleaning.                                                                                                                                                                                             |
|                                               |                                      |                                                                                                                                                                                                                                                                            |
|                                               |                                      | -   Since the maps need to be custom, we will also make functions that will work on variability. Some of the variables for the map will be background color, location input, glow intensity, names of the stars on the celestial map, and custom text on the map's footer. |
+-----------------------------------------------+--------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Week 4: Creating the Star Map                 | Sai Madhuri Kandula, Tejashwini Kasa | -   Create basic maps using sf object and sperical geoms using s2.                                                                                                                                                                                                         |
|                                               |                                      |                                                                                                                                                                                                                                                                            |
|                                               |                                      | -   Add scatterplot of the constellations on top of the prepared spherical geom.                                                                                                                                                                                           |
|                                               |                                      |                                                                                                                                                                                                                                                                            |
|                                               |                                      | -   Experiment with different locations, and test custom inputs in the plotting functions.                                                                                                                                                                                 |
+-----------------------------------------------+--------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Week 5-6: Shiny App Development               | Megan Hokama, Visalakshi Iyer        | -   Integrate star map code into a shiny app .                                                                                                                                                                                                                             |
|                                               |                                      |                                                                                                                                                                                                                                                                            |
|                                               |                                      | -   Work on the GUI elements to provide dynamic rendering.                                                                                                                                                                                                                 |
|                                               |                                      |                                                                                                                                                                                                                                                                            |
|                                               |                                      | -   Create workflow that provides size, theme, and customization of maps.                                                                                                                                                                                                  |
|                                               |                                      |                                                                                                                                                                                                                                                                            |
|                                               |                                      | -   Create download functionality for the maps.                                                                                                                                                                                                                            |
|                                               |                                      |                                                                                                                                                                                                                                                                            |
|                                               |                                      | -   Test different parameters to identify edge cases.                                                                                                                                                                                                                      |
+-----------------------------------------------+--------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Week 7: Testing and reviewing                 | Kiwoon Hong, Sai Madhuri Kandula     | -   Refine the app based on feedback.                                                                                                                                                                                                                                      |
|                                               |                                      |                                                                                                                                                                                                                                                                            |
|                                               |                                      | -   Deploy the app.                                                                                                                                                                                                                                                        |
|                                               |                                      |                                                                                                                                                                                                                                                                            |
|                                               |                                      | -   Prepare presentation for the final showcase.                                                                                                                                                                                                                           |
+-----------------------------------------------+--------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

## Repo Organization

-   `.github`: This directory contain files related to GitHub, such as workflows, issue templates, or other configurations.

-   `_extra`: Contains code, notes and other files used during experimentation. Contents of this folder is not a part of the final output.

-   `_freeze`: The folder created to store files generated during project render.

-   `data/`: This folder contains data files or datasets that are used in the project.

    -   `README.md` : A readme file that describes the datasets in more detail.

-   `images`: This folder contains image files that are used in the project, such as illustrations, diagrams, or other visual assets.

-   `.gitignore`: This file specifies which files or directories should be ignored by version control.

-   `README.md`: This file usually contains documentation or information about the project. It's often the first thing someone reads when they visit the project repository.

-   `_quarto.yml`: This is likely a configuration file

-   `about.qmd` : This quarto document contains the information about team members.

-   `index.qmd` : This quarto document contains the approach and analysis and results of the project.

-   `presentation.qmd` : It contains the slides for the presentation.

-   `proposal.qmd` : This quarto documents has the proposal of the project.

-   `project-final.Rproj` : This is an RStudio project file, which helps organize R-related files and settings for the project.
